#!/bin/bash
#-------------------------------------------------------------------------------
#                                                                     2022-02-22
                                                                  Version="1.18"
                                                                         Debug=0
#  Installatore costruito dopo quickstart
#
#  scopo:
#    Inizializzazione scheda raspi con
#      OS base raspbian
#      estensione firstboot da raspberian
#        <-- credits to:   ?fare link
#      estensione script server da bugy/script server
#        <-- credits to:   ?fare link
#
#   https://github.com/fpirri/gothings-raspi-install/raw/master/raspiinit
#-------------------------------------------------------------------------------
#
# download:
#   wget -O ./raspiinit https://github.com/fpirri/gothings-install/raw/master/raspiinit
#
# download & run:
#   wget -O ./raspiinit https://github.com/fpirri/gothings-install/raw/master/raspiinit && bash raspiinit
#
#-------------------------------------------------------------------------------
# development:
#  - work in .../gothings-raspi-install-aux/dockrepo/raspi-install/
#      <-- to avoid delays in reading updates from github (owing to cache in distribution network)
#      <-- in raspiinit, set variable Debug to 1
#  - start directly in the dir with ./start-raspi-install
#      <-- the script will copy the local version if 'bash raspiinit'
#      <-- raspiinit will use the archive .../raspi-install/quickinstall.tar.gz 
#          i.e the resident archive, without re-loading from github
#  - 
#  - updates made in any sysdata file should be put into the .tar.gz.archive
#      <-- i.e. the local archive contains the most recent revision
#  - at the end of the dev session:
#    - update Version in raspiinit
#    - set Debug=0 in raspiiinit
#    - make sure the .tar.gz archive contains all the changes in sysdata
#    - copy raspiinit & quickinstall.tar.gz into .../gothings-raspi-install/*
#    - commit .../gothings-raspi-install repository in NetBeans
#    - commit updates in github.com
#  - TEST the result:
#    - download (only) raspiinit from github
#    - verify raspinit Version, the net may give you the cached version
#    - in case, you may download with:
#        wget --no-check-certificate --no-cache --no-cookies -O ./raspiinit https://github.com/fpirri/gothings-install/raw/master/raspiinit
#
#-------------------------------------------------------------------------------
# TODO:
#   exec everything in ~/dockrepo/temp                              <-- IN CORSO
#   script to quickstart via known IP address
#     <-- mettere questo ed altre utilities sul repo github
#   gestione errore in fondo a raspiinit
#     <-- mettere lista di link utili
#   copia raspiinit & cd su dockrepo alla fine
#     <-- cambiare start in 'source raspiinit'
#
#-------------------------------------------------------------------------------
#
# creazione archivio:
#   sudo tar -czvpf "${NameArchive}" dockrepo/
#     <-- in questo caso puo' bastare: dockrepo/sysdata
#
#------------------------------------------------------------------------------
#
##########################################################################
#                                                          local functions
#
Red='\033[0;41;30m'
Std='\033[0;0;39m'
Green='\033[42m'
LogFile="raspiinit.log"
#------------
redline(){
# stampa in rosso la stringa $1
echo -e ${Red}"$1"${Std}
}
#------------
pause(){
#  ask key before continuing (^C is active)
#    $key:  user input key
#
echo '--------------------------------------------------------------'
  read -rsp $'Any key to continue, ^C to STOP ' -n 1 key
echo
}
#------------
pausegreen(){
#
#  ask key before continuing (^C is active)
#    $key:  user input key
  echo -e "${Green}--------------------------------------------------------------"
  echo -n -e "Press any key to continue, ^C stops processing "
  read -rs -n 1 key
  echo -e " $Std"
  echo
}
#------------
log() {
#  $1   stringa da scrivere sul log file
  echo "$( date '+%F_%H:%M:%S' ) | $1" >> "${LogFile}"
}
#------------
echolog() {
#  $1   stringa da scrivere sul log file & sul terminale
  echo "$1"
  log "$1"
}
#------------
errorstop() {
#  $1   codice di errore
#  $2   stringa di errore
#  $3   label chiamante (per sapere dove ...)
  if [ $1 -gt 0 ]
  then
    echolog "$3 | error $1 - $2"
    echolog "raspiinit ends with error $1"
    pausegreen
    exit $1
  else
    echo "$3 | passed" >> "${LogFile}"
  fi
}
#
#---------
setdir() {
#  $1  verifica esistenza dir
#    <-- crea dir se non esiste
#    <-- exit 81 on error, ok se esiste gia'
  local Result
  if [[ -z "$1" ]]
  then
    errorstop "81" "setdir: empty varname"  "setdir: $1"
  else
    if [ ! -d "$1" ]
    then
      mkdir "$1"
      Result=$?
      if [[ $Result -eq 1 ]] # dir exists (empty?)
      then
        echo "dir $1 already exists!"
      else
        errorstop ${Result} "set dir $1 non riuscito"  "set dir $1"
      fi
    fi
  fi
}
#
################################################################################

#
################################################################################
#
echo
echo "=============================================================== $Version"
echo
echo "    GOTHINGS boot loader for Raspberry (C) board management"
echo
echo "================================================================ Debug: $Debug"
echo
echo 'This script will download software from github

The board will be able to run initialization software at next boot, to
allow you to use a standard browser to command the board
The script creates a directory in your homedir, named "dockrepo", to contain the
installer and future downloads of GoThings software

Please look at the README file on github to verify the performed operations
  ( https://github.com/fpirri/gothings-install/ )
You can find information on Gothings software at: www.gothings.org
'
pausegreen
# set dirs
echo '   -->
'
AppName="raspi-install"
Dockrepo="$HOME/dockrepo/"
setdir "${Dockrepo}"
DockTemp="${Dockrepo}temp/"
setdir "${DockTemp}"
LogFile="${DockTemp}raspiinit.log"
log "raspiinit ver. $Version starts"
DockApp="${Dockrepo}${AppName}/"
setdir "${DockApp}"
ArchiveFile="${DockApp}quickinstall.tar.gz"
AppSysdata="${Dockrepo}sysdata/$AppName/"
setdir "${AppSysdata}"
echolog "setdirs OK"
# change working dir
cd "${AppSysdata}"
Result=$?
if [ $Result -gt 0 ]
then
  echo "Error $Result while changing directory to ~/dockrepo/sysdata/raspi-install"
  echo "This should not happen!"
  echo "Eventually, please report to the developers"
fi
#
if [ $Debug -eq 0 ] # IF conditions: AGGIUSTARE!
then
#
################################################################################
#                                          download latest manager da repository
  echolog 'No Debug, download quickinstall from github ...'
  wget -O "${ArchiveFile}" https://github.com/fpirri/gothings-raspi-install/raw/master/quickinstall.tar.gz
  Result=$?
  if [ $Result -gt 0 ]
  then
    echo "Error $Result while reading quickinstall.tar.gz on github"
    echo "This should not happen!"
    echo "please verify your internet connection"
    echo "Eventually, please report to the developers"
    pausegreen
    exit 83
  fi
fi
################################################################################
#                                       quickinstall.tar.gz DEVE essere presente
if [[ ! -s "${ArchiveFile}" ]] # IF conditions: AGGIUSTARE!
then
  echolog "First debug call, download archive from github ..."
  wget -O "${ArchiveFile}" https://github.com/fpirri/gothings-raspi-install/raw/master/quickinstall.tar.gz
fi
################################################################################
#                                                             expand in dockrepo
#
echolog "Expand .tar.gz archive ..."
tar xpf "${ArchiveFile}" -C "${HOME}"
Result=$?
if [ $Result -gt 0 ]
then
  echo "Error $Result while expanding the quickinstall.tar.gz archive"
  echo "This should not happen!"
  echo "Eventually, please report to the developers"
fi
#
#
################################################################################
#                                                                installa sul PC
#
echolog "Should I exec quickstart?"
pausegreen
bash quickstart.sh
Result=$?
if [ $Result -gt 0 ]
then
  # da RIVEDERE
################################################################################
#                                                                      Avviso KO
  echolog "Error Q-${Result} while executing quickstart"
  echo 
  echo "Please verify the script output above and report all"
  echo "errors you find to the developers"
  echo
  echo "You may find logs in the following locations:"
  echo "${LogFile}"
  echo "./raspiinit.log   <-- the download location of raspiinit"
  echo
  log "raspiinit ends with error Q-${Result}"
################################################################################
#                                                                      Avviso OK
else
#
  log "raspiinit successfully ends"
  echo '
No errors?

Congratulations! You have installed firstboot service into your board.

At next reboot the firstboot service will install the GoThings 
script-server at the URL:
    http://<Your Raspi IP Address>:5000"
Please note that any browser in your LAN can access the script server

While direct control from public internet is not allowed, the situation 
is NOT sufficently secure
It is recommended you restrict the access to your personal PC only.

Please follow the recommendation at:
    https://www.gothings.org/raspi/script-security-advice


--------'
fi
